/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "org.apache.hadoop.yarn.federation.proto";
option java_outer_classname = "YarnServerFederationProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.yarn;

import "yarn_protos.proto";
import "yarn_server_common_protos.proto";

message FederationSubClusterIdProto {
  optional string id = 1;
}

enum FederationSubClusterStateProto {
  SC_NEW = 1;
  SC_RUNNING = 2;
  SC_UNHEALTHY = 3;
  SC_DECOMMISSIONED = 4;
  SC_LOST = 5;
  SC_DEREGISTERED = 6;
  SC_DRAINING = 7;
}

message FederationSubClusterInfoProto {
  optional FederationSubClusterIdProto sub_cluster_id = 1;
  optional string aMRM_address = 2;
  optional string client_rM_address = 3;
  optional string rM_admin_address = 4;
  optional string web_app_address = 5;
  optional int64 lastHeartBeat = 6;
  optional FederationSubClusterStateProto state = 7;
  optional int64 lastStartTime = 8;
  optional string capability = 9;
}

message FederationSubClusterHeartbeatResponseProto {
}

message FederationSubClusterDeregisterRequestProto {
  optional FederationSubClusterIdProto sub_cluster_id = 1;
  optional FederationSubClusterStateProto state = 2;
}

message FederationSubClusterDeregisterResponseProto {
}

message FederationMembershipStateVersionProto {
  optional VersionProto version = 1;
}

message FederationApplicationStateVersionProto {
  optional VersionProto version = 1;
}

message FederationApplicationInfoProto {
  optional ApplicationIdProto application_id = 1;
  optional FederationSubClusterIdProto home_sub_cluster = 2;
}

message FederationInsertNewApplicationRequestProto {
  optional FederationApplicationInfoProto application_info = 1;
}

message FederationInsertNewApplicationResponseProto {
}

message FederationUpdateApplicationRequestProto {
  optional FederationApplicationInfoProto application_info = 1;
}

message FederationUpdateApplicationResponseProto {
}

message FederationDeleteApplicationRequestProto {
  optional ApplicationIdProto application_id = 1;
}

message FederationDeleteApplicationResponseProto {
}

message FederationPolicyConfigurationProto {
  optional string type = 1;
  optional bytes params = 2;
}

message FederationPolicyConfigurationGetRequestProto {
  optional string queue = 1;
}

message FederationPolicyConfigurationGetResponseProto {
  optional FederationPolicyConfigurationProto policy = 1;
}

message FederationPolicyConfigurationSetRequestProto {
  optional string queue = 1;
  optional FederationPolicyConfigurationProto policy = 2;
}

message FederationPolicyConfigurationSetResponseProto {
}
